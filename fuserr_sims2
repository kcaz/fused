#test effect of measurement noise on lamR; omit lamS, lamP; no fusion or priors
low = z.benchmark(lamP=[1],lamR=[0.01,0.1,0.3,0.5,1,10],lamS=[0], b1dim=(20,200), b2dim=(35,500), maxgroupsize=4, pct_fused=0, minfusestd=0, maxfusestd=0, xsamples1=10, xsamples2=15, noise1=0.1, noise2=0.1, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.01, 0): (0.37754931563661376, 0.0034389499441277063),
 (1, 0.1, 0): (0.37497711166204667, 0.0034873199631000537),
 (1, 0.3, 0): (0.38397113217994572, 0.0028401533223483804),
 (1, 0.5, 0): (0.38299534088189635, 0.001950447125879311),
 (1, 1, 0): (0.38703167856461856, 0.0013647726221413449),
 (1, 10, 0): (0.64865479973207896, 0.0035740194333166663)}

lowmid = z.benchmark(lamP=[1],lamR=[0.01,0.1,0.3,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(35,500), maxgroupsize=4, pct_fused=0, minfusestd=0, maxfusestd=0, xsamples1=10, xsamples2=15, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.01, 0): (0.38409432752190431, 0.0027662795153824116),
 (1, 0.1, 0): (0.38766783582982234, 0.0038636107137793719),
 (1, 0.3, 0): (0.38780196990657478, 0.0049622883300393834),
 (1, 0.5, 0): (0.38447308676553782, 0.0024850024904465996),
 (1, 1, 0): (0.39027449890602289, 0.0035192462158221893),
 (1, 10, 0): (0.65646237342298108, 0.0042679365082590607)}

mid = z.benchmark(lamP=[1],lamR=[0.01,0.1,0.3,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(35,500), maxgroupsize=4, pct_fused=0, minfusestd=0, maxfusestd=0, xsamples1=10, xsamples2=15, noise1=0.5, noise2=0.5, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.01, 0): (0.4095432046017623, 0.002299950773117307),
 (1, 0.1, 0): (0.40278165215387007, 0.0016657273274271796),
 (1, 0.3, 0): (0.40674275253864822, 0.0033692148854703994),
 (1, 0.5, 0): (0.40059416293121713, 0.0029287056758719623),
 (1, 1, 0): (0.40974177596744205, 0.001491423082944408),
 (1, 10, 0): (0.65621881787503722, 0.0017179126513078614)}

highmid = z.benchmark(lamP=[1],lamR=[0.01,0.1,0.3,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(35,500), maxgroupsize=4, pct_fused=0, minfusestd=0, maxfusestd=0, xsamples1=10, xsamples2=15, noise1=0.7, noise2=0.7, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.01, 0): (0.42982486271182951, 0.0054586232523811413),
 (1, 0.1, 0): (0.43304347005128419, 0.0030273763891702898),
 (1, 0.3, 0): (0.42833251216673246, 0.0022234261021788562),
 (1, 0.5, 0): (0.41794318833858501, 0.0016010030653377323),
 (1, 1, 0): (0.41451645361137562, 0.0028262078732666802),
 (1, 10, 0): (0.6479333548353744, 0.0037911836260874948)}

high = z.benchmark(lamP=[1],lamR=[0.01,0.1,0.3,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(35,500), maxgroupsize=4, pct_fused=0, minfusestd=0, maxfusestd=0, xsamples1=10, xsamples2=15, noise1=1, noise2=1, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.01, 0): (0.49022009759722207, 0.0063053898248717401),
 (1, 0.1, 0): (0.48040403545007243, 0.0066019746167347701),
 (1, 0.3, 0): (0.48879499001739762, 0.0053703443519603237),
 (1, 0.5, 0): (0.46126250553383918, 0.0049578510829209358),
 (1, 1, 0): (0.44399219902596343, 0.0043511439378644831),
 (1, 10, 0): (0.6553782577741919, 0.0042237232520290508)}

lamR=[0.01,0.1,0.3,0.5,1,10]
meas=[0.1,0.3,0.5,0.7,1]
a=[0.37754931563661376,0.38409432752190431,0.4095432046017623,0.42982486271182951,0.49022009759722207]
b=[0.37497711166204667,0.38766783582982234,0.40278165215387007,0.43304347005128419,0.48040403545007243]
c=[0.38397113217994572,0.38780196990657478,0.40674275253864822,0.42833251216673246,0.48879499001739762]
d=[0.38299534088189635,0.38447308676553782,0.40059416293121713,0.41794318833858501,0.46126250553383918]
e=[0.38703167856461856,0.39027449890602289,0.40974177596744205,0.41451645361137562,0.44399219902596343]
plot(meas,a,label='0.01',linewidth=3,color='b')
plot(meas,b,label='0.1',linewidth=3,color='g')
plot(meas,c,label='0.3',linewidth=3,color='r')
plot(meas,d,label='0.5',linewidth=3,color='c')
plot(meas,e,label='0.7',linewidth=3,color='m')
scatter(meas,a,color='b')
scatter(meas,b,color='g')
scatter(meas,c,color='r')
scatter(meas,d,color='c')
scatter(meas,e,color='m')
xlabel('measurement noise')
ylabel('prediction mean squared error')
xticks([0.1,0.3,0.5,0.7,1])
legend(title='lambdaR',loc=4)
show()

#look at effect of sample size
small = z.benchmark(lamP=[1],lamR=[0],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (0.69549790402321743, 0.0052957380792870963)}

small = z.benchmark(lamP=[1],lamR=[0],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=10, xsamples2=10, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (0.5114511514605582, 0.002063629440462783)}

small = z.benchmark(lamP=[1],lamR=[0],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=15, xsamples2=15, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (0.35503025172539149, 0.0034437822501989725)}

small = z.benchmark(lamP=[1],lamR=[0],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minf	usestd=0.5, maxfusestd=0.5, xsamples1=50, xsamples2=50, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (0.011219175619260235, 9.599383261863444e-05)}

small = z.benchmark(lamP=[1],lamR=[0],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=100, xsamples2=100, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=50)
{(1, 0, 0): (0.0036311038060856675, 1.4894101097132663e-05)}

size=[5,10,15,50,100]
a=[0.69549790402321743,0.5114511514605582,0.35503025172539149,0.011219175619260235,0.0036311038060856675]
plot(size,a,linewidth=3)
scatter(size,a)
xlabel('sample size')
ylabel('prediction mean squared error')
show()



#test effect of sample size on lamR
small = z.benchmark(lamP=[1],lamR=[0,0.01,0.1,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (0.6958082202640623, 0.0043558223988711606),
 (1, 0.01, 0): (0.69611985857158187, 0.0052340717114279321),
 (1, 0.1, 0): (0.69214974989511169, 0.009552560746207861),
 (1, 0.5, 0): (0.69977933843839435, 0.0033980864770864817),
 (1, 1, 0): (0.70255594718241865, 0.0058639127569577879),
 (1, 10, 0): (0.84750260139315525, 0.003185766380875641)}

smallish = z.benchmark(lamP=[1],lamR=[0,0.01,0.1,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=10, xsamples2=10, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (0.51966256554438972, 0.0034736554554745244),
 (1, 0.01, 0): (0.51338540255052523, 0.0039229110169767458),
 (1, 0.1, 0): (0.52483763925118299, 0.0064228465549121955),
 (1, 0.5, 0): (0.52436037874482411, 0.0041577822604535863),
 (1, 1, 0): (0.5317296949853999, 0.0022726681617826409),
 (1, 10, 0): (0.81807122825548928, 0.0059179888310615754)}

biggish = z.benchmark(lamP=[1],lamR=[0,0.01,0.1,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=20, xsamples2=20, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (0.92214227031664853, 0.48154626865961492),
 (1, 0.01, 0): (0.39472685085145709, 0.10541218544418368),
 (1, 0.1, 0): (0.26501471374315455, 0.0091271517184625586),
 (1, 0.5, 0): (0.21356756204357091, 0.0022722725166301927),
 (1, 1, 0): (0.25594146945774482, 0.0011873379214685877),
 (1, 10, 0): (0.78187070100053047, 0.0023267645484678036)}

biggerish = z.benchmark(lamP=[1],lamR=[0,0.01,0.1,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=30, xsamples2=30, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (1.9707249911716986, 1.1969028383231273),
 (1, 0.01, 0): (0.73906127201594685, 0.41013325059585792),
 (1, 0.1, 0): (0.085373768154124827, 0.0069180642712013095),
 (1, 0.5, 0): (0.059085438384151201, 0.0020292499131370923),
 (1, 1, 0): (0.1055796221884315, 0.0033704662630550204),
 (1, 10, 0): (0.72970617434106655, 0.0024605502063644331)}

bigger = z.benchmark(lamP=[1],lamR=[0,0.01,0.1,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=40, xsamples2=40, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (0.020707454239091313, 0.00065431333133170546),
 (1, 0.01, 0): (0.020750309088247158, 0.0011124261109877601),
 (1, 0.1, 0): (0.022225124519879038, 0.0012465407254058359),
 (1, 0.5, 0): (0.021582028072920534, 0.001489297707110273),
 (1, 1, 0): (0.04438232517865081, 0.0017778091675912586),
 (1, 10, 0): (0.70781630956685848, 0.0040025425755802939)}

big = z.benchmark(lamP=[1],lamR=[0,0.01,0.1,0.5,1,10],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=50, xsamples2=50, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)
{(1, 0, 0): (0.01212844067359895, 0.00038795824496869251),
 (1, 0.01, 0): (0.011590369777345937, 0.00035852165075772136),
 (1, 0.1, 0): (0.01118054702050787, 0.00034808484639739631),
 (1, 0.5, 0): (0.012087316832330429, 0.00034242306470259014),
 (1, 1, 0): (0.02346369988074239, 0.00065803422386586567),
 (1, 10, 0): (0.66944205106843346, 0.0057005124416378032)}

ss=[5,10,20,30,40,50]
a=[0.6958082202640623,0.51966256554438972,0.92214227031664853,1.9707249911716986,0.020707454239091313,0.01212844067359895]
b=[0.69611985857158187,0.51338540255052523,0.39472685085145709,0.73906127201594685,0.020750309088247158,0.011590369777345937]
c=[0.69214974989511169,0.52483763925118299,0.26501471374315455,0.085373768154124827,0.022225124519879038,0.01118054702050787]
d=[0.69977933843839435,0.52436037874482411,0.21356756204357091,0.059085438384151201,0.021582028072920534,0.012087316832330429]
e=[0.70255594718241865,0.5317296949853999,0.25594146945774482,0.1055796221884315,0.04438232517865081,0.02346369988074239]
f=[0.84750260139315525,0.81807122825548928,0.78187070100053047,0.72970617434106655,0.70781630956685848,0.66944205106843346]
plot(ss,a,label='0',linewidth=3,color='b')
plot(ss,b,label='0.01',linewidth=3,color='g')
plot(ss,c,label='0.1',linewidth=3,color='r')
plot(ss,d,label='0.5',linewidth=3,color='c')
plot(ss,e,label='1',linewidth=3,color='m')
plot(ss,f,label='10',linewidth=3,color='k')
scatter(ss,a,color='b')
scatter(ss,b,color='g')
scatter(ss,c,color='r')
scatter(ss,d,color='c')
scatter(ss,e,color='m')
scatter(ss,f,color='k')
xlabel('sample size')
ylabel('prediction mean squared error')
xticks([5,10,20,30,40,50])
legend(title='lambdaR')
show()

lamR=[0,0.01,0.1,0.5,1,10]
ss=[5,10,20,30,40,50]
a=[0.6958082202640623,0.69611985857158187,0.69214974989511169,0.69977933843839435,0.70255594718241865,0.84750260139315525]
b=[0.51966256554438972,0.51338540255052523,0.52483763925118299,0.52436037874482411,0.5317296949853999,0.81807122825548928]
c=[0.92214227031664853,0.39472685085145709,0.26501471374315455,0.21356756204357091,0.25594146945774482,0.78187070100053047]
d=[1.9707249911716986,0.73906127201594685,0.085373768154124827,0.059085438384151201,0.1055796221884315,0.7297061743410665]
e=[0.020707454239091313,0.020750309088247158,0.022225124519879038,0.021582028072920534,0.04438232517865081,0.70781630956685848]
f=[0.01212844067359895,0.011590369777345937,0.01118054702050787,0.012087316832330429,0.02346369988074239,0.66944205106843346]
plot(lamR,a,label='5',linewidth=3,color='b')
plot(lamR,b,label='10',linewidth=3,color='g')
plot(lamR,c,label='20',linewidth=3,color='r')
plot(lamR,d,label='30',linewidth=3,color='c')
plot(lamR,e,label='40',linewidth=3,color='m')
plot(lamR,f,label='50',linewidth=3,color='k')
scatter(lamR,a,color='b')
scatter(lamR,b,color='g')
scatter(lamR,c,color='r')
scatter(lamR,d,color='c')
scatter(lamR,e,color='m')
scatter(lamR,f,color='k')
xlabel('lambdaR')
ylabel('prediction mean squared error')
xticks([0,0.01,0.1,0.5,1,10])
legend(title='sample size')
show()

#look at effect of lamP, when changing prior falsepos and falseneg rates
nofalseps = z.benchmark(lamP=[0,0.3,0.5,0.7,1],lamR=[0.3],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3,it=5)

somefalseps = z.benchmark(lamP=[0,0.3,0.5,0.7,1],lamR=[0.3],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0.3, p_falsen=0, sparse=0.3,it=5)

morefalseps = z.benchmark(lamP=[0,0.3,0.5,0.7,1],lamR=[0.3],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0.5, p_falsen=0, sparse=0.3,it=5)

lotsfalseps = z.benchmark(lamP=[0,0.3,0.5,0.7,1],lamR=[0.3],lamS=[0], b1dim=(20,200),b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0.5, maxfusestd=0.5, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0.7, p_falsen=0, sparse=0.3,it=5)



#look at effect of %fused on lamS
nofuse=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20,50,100], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=0, minfusestd=0, maxfusestd=0, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.562418919360404, 0.0028186543895218608),
 (1, 0.5, 0.5): (0.55558612209818059, 0.0049043805406175818),
 (1, 0.5, 0.7): (0.55173956206560915, 0.0026528691870709182),
 (1, 0.5, 1): (0.55930187400176568, 0.0039912388651429809),
 (1, 0.5, 10): (0.55387407984208736, 0.0030303978347482842),
 (1, 0.5, 20): (0.56363458390475896, 0.0022972951564821024)
 (1, 0.5, 50): (0.5573877218963087, 0.0036315154568454838),
 (1, 0.5, 100): (0.55132159355375709, 0.0036791389407227842)}

lilfuse=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20,50,100], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=0.3, minfusestd=0, maxfusestd=0, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.55929537712488187, 0.0023456564064768025),
 (1, 0.5, 0.5): (0.55460003966984539, 0.0060766166572914964),
 (1, 0.5, 0.7): (0.5481015578384445, 0.0051222663363196651),
 (1, 0.5, 1): (0.54702002711929087, 0.0051098556382393441),
 (1, 0.5, 10): (0.54324865983446347, 0.0047223153612315034),
 (1, 0.5, 20): (0.54242896931771667, 0.0041053501241068505),
 (1, 0.5, 50): (0.55490569816045743, 0.0042548269458471521),
 (1, 0.5, 100): (0.54735214065580973, 0.0047711753309276576)}

midfuse=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20,50,100], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=0.5, minfusestd=0, maxfusestd=0, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.55553732678630185, 0.0037262685287152886),
 (1, 0.5, 0.5): (0.53418216728001666, 0.0053710872358199288),
 (1, 0.5, 0.7): (0.54097490270597637, 0.0034316360698524381),
 (1, 0.5, 1): (0.53632894704316048, 0.0053028148390479174),
 (1, 0.5, 10): (0.53521182950465529, 0.0060688695572778846),
 (1, 0.5, 20): (0.5313115581598421, 0.0051567899756931089),
 (1, 0.5, 50): (0.53679683193646155, 0.0050095689127780257),
 (1, 0.5, 100): (0.53493142153404705, 0.0051122082395113804)}

midhifuse=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20,50,100], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=0.7, minfusestd=0, maxfusestd=0, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.56297094336352471, 0.0043863846481804452),
 (1, 0.5, 0.5): (0.51309172531945912, 0.0033674096494613359),
 (1, 0.5, 0.7): (0.50900254286391244, 0.0023715082576739395),
 (1, 0.5, 1): (0.49481674529284742, 0.0028751136595140006),
 (1, 0.5, 10): (0.49264307910502791, 0.0032380774140011565),
 (1, 0.5, 20): (0.49888805726494523, 0.0047638275030377191),
 (1, 0.5, 50): (0.49992182005518282, 0.0039407361731106415),
 (1, 0.5, 100): (0.49514670034230585, 0.0046045020358073284)}

hifuse=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20,50,100], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=1, minfusestd=0, maxfusestd=0, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.55660266293721083, 0.0050182978415902399),
 (1, 0.5, 0.5): (0.50138930685526062, 0.0038834572036012234),
 (1, 0.5, 0.7): (0.49009768617463295, 0.002302427483842425),
 (1, 0.5, 1): (0.47788401485033194, 0.0077373408531204836),
 (1, 0.5, 10): (0.4748290942388052, 0.0067298435194174111),
 (1, 0.5, 20): (0.47339892814679263, 0.002242183899489208),
 (1, 0.5, 50): (0.48462196064615182, 0.0069132113398195577),
 (1, 0.5, 100): (0.47022996300517139, 0.0074360220183102305)}

fused=[0,0.3,0.5,0.7,1]
lamS=[0,0.5,0.7,1,10,20,50,100]
a=[0.562418919360404,0.55929537712488187,0.55553732678630185,0.56297094336352471,0.55660266293721083]
b=[0.55558612209818059,0.55460003966984539,0.53418216728001666,0.51309172531945912,0.50138930685526062]
c=[0.55173956206560915,0.5481015578384445,0.54097490270597637,0.50900254286391244,0.49009768617463295]
d=[0.55930187400176568,0.54702002711929087,0.53632894704316048,0.49481674529284742,0.47788401485033194]
e=[0.55387407984208736,0.54324865983446347,0.53521182950465529,0.49264307910502791,0.4748290942388052]
f=[0.56363458390475896,0.54242896931771667,0.5313115581598421,0.49888805726494523,0.47339892814679263]
g=[0.5573877218963087,0.55490569816045743,0.53679683193646155,0.49992182005518282,0.48462196064615182]
h=[0.55132159355375709,0.54735214065580973,0.53493142153404705,0.49514670034230585,0.47022996300517139]
plot(fused,a,label='0',linewidth=3,color='b')
plot(fused,b,label='0.5',linewidth=3,color='g')
plot(fused,c,label='0.7',linewidth=3,color='r')
plot(fused,d,label='1',linewidth=3,color='c')
plot(fused,e,label='10',linewidth=3,color='m')
plot(fused,f,label='20',linewidth=3,color='k')
plot(fused,g,label='50',linewidth=3,linestyle='dotted')
plot(fused,h,label='100',linewidth=3,linestyle='dashed')
scatter(fused,a,color='b')
scatter(fused,b,color='g')
scatter(fused,c,color='r')
scatter(fused,d,color='c')
scatter(fused,e,color='m')
scatter(fused,f,color='k')
scatter(fused,g)
scatter(fused,h)
xlabel('percent fused')
ylabel('prediction mean squared error')
xticks([0,0.3,0.5,0.7,1])
legend(title='lambdaS')
show()

#vary amount of noise in fusion
nonoise=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=0.4, minfusestd=0, maxfusestd=0, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.5895449368383392, 0.0038458459833672276),
 (1, 0.5, 0.5): (0.58220605117542656, 0.0058050331093209128),
 (1, 0.5, 0.7): (0.56962797883551819, 0.0070042563745445902),
 (1, 0.5, 1): (0.57914873547946366, 0.0022932349566636445),
 (1, 0.5, 10): (0.57305816080473426, 0.0057998239803958487),
 (1, 0.5, 20): (0.57139840568339006, 0.0036243882297066288)}

lownoise=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=0.4, minfusestd=0.2, maxfusestd=0.2, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.58245587823847689, 0.0047595156917283558),
 (1, 0.5, 0.5): (0.56697621089235439, 0.0038743093563506528),
 (1, 0.5, 0.7): (0.55707487724082605, 0.0045662164414543155),
 (1, 0.5, 1): (0.56891388705550128, 0.0030995135916816923),
 (1, 0.5, 10): (0.56704345353329477, 0.0032909468909201041),
 (1, 0.5, 20): (0.57374805172718424, 0.0051822427661061153)}

lowmidnoise=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=0.4, minfusestd=0.2, maxfusestd=0.2, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.58282594687517153, 0.0032709399254835909),
 (1, 0.5, 0.5): (0.56468152247243464, 0.005108883026438569),
 (1, 0.5, 0.7): (0.56452173567489261, 0.0041628534286241078),
 (1, 0.5, 1): (0.57152201952459458, 0.0055891689471930369),
 (1, 0.5, 10): (0.56683331946341264, 0.0052000683917923628),
 (1, 0.5, 20): (0.58336574995033119, 0.0016160107300135279)}

midnoise=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=0.4, minfusestd=0.5, maxfusestd=0.5, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.69294515901582587, 0.0039046354980553141),
 (1, 0.5, 0.5): (0.66936611176232574, 0.0041987218401905889),
 (1, 0.5, 0.7): (0.69311129742098443, 0.0076275497816606329),
 (1, 0.5, 1): (0.69506644950757579, 0.0055683943901433776),
 (1, 0.5, 10): (0.68625278676650991, 0.0064323938951921268),
 (1, 0.5, 20): (0.6839563601925156, 0.0032716068470285253)}

midhinoise=z.benchmark(lamP=[1],lamR=[0.5],lamS=[0,0.5,0.7,1,10,20], b1dim=(20,200), b2dim=(30,300), maxgroupsize=2, pct_fused=0.4, minfusestd=0.7, maxfusestd=0.7, xsamples1=5, xsamples2=5, noise1=0.3, noise2=0.3, p_falsep=0, p_falsen=0, sparse=0.3, it=5)
{(1, 0.5, 0): (0.84637627510502311, 0.0089083701999259027),
 (1, 0.5, 0.5): (0.83055339755834034, 0.007724765437853125),
 (1, 0.5, 0.7): (0.83210165182652229, 0.002902556946870056),
 (1, 0.5, 1): (0.81795632834081766, 0.0040892784031704293),
 (1, 0.5, 10): (0.82809464446692738, 0.0041452074476036925),
 (1, 0.5, 20): (0.81644844281067963, 0.0039974481231242172)}











